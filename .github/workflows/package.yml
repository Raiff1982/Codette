name: Python Package using Conda

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 5
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8, 3.9, 3.10]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        activate-environment: base
        auto-update-conda: true
        miniforge-variant: Miniconda

    - name: Cache conda
      uses: actions/cache@v3
      with:
        path: ~/.conda/envs
        key: ${{ runner.os }}-conda-${{ hashFiles('environment.yml') }}
        restore-keys: |
          ${{ runner.os }}-conda-

    - name: Install dependencies
      run: conda env update --file environment.yml --name base

    - name: Lint with flake8
      run: |
        conda install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        conda install pytest
        pytest

  publish:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: 3.9
        activate-environment: base

    - name: Install dependencies
      run: conda env update --file environment.yml --name base

    - name: Build and publish to PyPI
      run: |
        pip install twine
        python setup.py sdist bdist_wheel
        twine upload dist/*
